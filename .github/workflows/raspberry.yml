name: raspberry

on:
  push:
    paths:
      - ".github/workflows/raspberry.yml"
    branches: ["main"]

jobs:
  pi-gen-lockoff:
    runs-on: ubuntu-latest
    steps:
      # Create a stage 'install-stage' instructing to add edatec bsp & docker
      - run: |
          mkdir -p install-stage/package-test &&
          {
          cat > install-stage/package-test/00-run-chroot.sh <<-EOF
          #!/bin/bash
          apt-get install -y ca-certificates curl gnupg
          curl -fsSL https://apt.edatec.cn/pubkey.gpg | sudo apt-key add -
            echo "deb https://apt.edatec.cn/raspbian stable main" | sudo tee /etc/apt/sources.list.d/edatec.list
            curl -fsSL https://get.docker.com -o get-docker.sh | sh
          EOF
          } &&
          chmod +x install-stage/package-test/00-run-chroot.sh &&
          echo "ed-cm4nano-bsp ed-rtc" > install-stage/package-test/01-packages &&
          {
          cat > install-stage/prerun.sh <<-EOF
          #!/bin/bash -e
          if [ ! -d "\${ROOTFS_DIR}" ]; then
            copy_previous
          fi
          EOF
          } &&
          chmod +x install-stage/prerun.sh

      - uses: usimd/pi-gen-action@v1
        id: build
        with:
          # Compression to apply on final image (either "none", "zip", "xz" or "gz").
          compression: zip

          # Compression level to be used. From 0 to 9 (refer to the tool man page for more
          # information on this. Usually 0 is no compression but very fast, up to 9 with the
          # best compression but very slow).
          compression-level: 6

          # Disable the renaming of the first user during the first boot. This make it so
          # 'username' stays activated. 'username' must be set for this to work. Please be
          # aware of the implied security risk of defining a default username and password
          # for your devices.
          disable-first-boot-user-rename: 1

          # Set whether a NOOBS image should be built as well. If enabled, the output
          # directory containing the NOOBS files will be saved as output variable
          # 'image-noobs-path'.
          enable-noobs: false

          # Enable SSH access to Pi.
          enable-ssh: 1

          # If this feature is enabled, the action will configure pi-gen to not export any
          # stage as image but the last one defined in property 'stage-list'. This is
          # helpful when building a single image flavor (in contrast to building a
          # lite/server and full-blown desktop image), since it speeds up the build process
          # significantly.
          export-last-stage-only: true

          # Comma or whitespace separated list of additional packages to install on host
          # before running pi-gen. Use this list to add any packages your custom stages may
          # require. Note that this is not affecting the final image. In order to add
          # additional packages, you need to add a respective 'XX-packages' file in your
          # custom stage.
          extra-host-dependencies: ""

          # Comma or whitespace separated list of additional modules to load on host before
          # running pi-gen. If your custom stage requires additional software or kernel
          # modules to be loaded, add them here. Note that this is not meant to configure
          # modules to be loaded in the target image.
          extra-host-modules: ""

          # Token to use for checking out pi-gen repo.
          github-token: ${{ github.token }}

          # Host name of the image.
          hostname: lockoff

          # Final image name.
          image-name: "lockoff"

          # Password of the intial user account, locked if empty.
          password: ${{ secrets.RPI_PASSWORD }}

          # Path where selected pi-gen ref will be checked out to. If the path does not yet
          # exist, it will be created (including its parents).
          pi-gen-dir: pi-gen

          # GitHub repository to fetch pi-gen from, must be a fork from RPi-Distro/pi-gen.
          pi-gen-repository: RPi-Distro/pi-gen

          # Release version of pi-gen to use. This can both be a branch or tag name known in
          # the pi-gen repository.
          pi-gen-version: arm64

          # The release version to build images against. Valid values are jessie, stretch,
          # buster, bullseye, and testing.
          release: bullseye

          # List of stage name to execute in given order. Relative and absolute paths to
          # custom stage directories are allowed here. Note that by default pi-gen exports
          # images in stage2 (lite), stage4 and stage5. You probably want to hook in custom
          # stages before one of the exported stages. Otherwise, the action will make sure
          # any custom stage will include an image export directive.
          stage-list: stage0 stage1 stage2 ./install-stage

          # System timezone.
          timezone: Europe/Copenhagen

          # Use qcow2 images to reduce space and runtime requirements.
          use-qcow2: 1

          # Name of the initial user account.
          username: lockoff

          # Print all output from pi-gen.
          verbose-output: true

          # Wifi country code of default network to connect to.
          wpa-country: "DK"

          # SSID of a default wifi network to connect to.
          wpa-essid: "NKK_LUMO"

          # Password of default wifi network to connect to.
          wpa-password: ${{ secrets.NKK_WPA_PASSWORD}}

      - uses: actions/upload-artifact@v3
        with:
          name: pi-gen-image
          path: ${{ steps.build.outputs.image-path }}
